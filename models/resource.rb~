require 'sinatra/activerecord'

class Resource < ActiveRecord::Base
  has_many :bookings
  def available_slots?(start, finish)
    bookings = Booking.where('resource_id = ? AND start >= ? AND start <= ? AND status = ?', id, start, finish, 'approved')

    avail = bookings.load.map { |b| [b.start.strftime('%FT%TZ'), b.finish.strftime('%FT%TZ')] }.sort.flatten
    start_date= start.to_date.strftime('%FT%TZ')
    finish_date= finish.to_date.strftime('%FT%TZ')
    #p "avails", avail
    #if avail[0].to_date.strftime('%FT%TZ') == start_date
     #  p "igual start"
   #    avail.delete_at(0)
   # p "avails-0", avail
    #else
      avail.insert(0, start_date)
   # end

  #  if avail.last.to_date.strftime('%FT%TZ') == finish_date
    #   p "igual finish"
  #     avail.delete_at(-1)
 #   else
      avail.insert(-1, finish_date)
#    end
    #p "avails", avail
    avail = avail.each_slice(2).to_a
    avail.delete_if {|a| a[0] == a[1] }
    avail.map { |a| Slot.new(id, a[0], a[1]) }
    

  end

  def remove_pending(start, finish)
    bookings = Booking.where('resource_id = ? AND start >= ? AND start <= ? AND status = ?', id, start, finish, 'pending')
    bookings.each { |b| b.destroy }
  end
end


